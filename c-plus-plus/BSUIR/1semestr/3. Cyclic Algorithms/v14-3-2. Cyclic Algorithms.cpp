/*Для каждого x, изменяющегося от a до b с шагом h, найти значения функции Y(x), суммы S(x) и |Y(x) – S(x)| 
и вывести в виде таблицы. Значения a, b, h и n вводятся с клавиатуры. 
Так как значение S(x) является рядом разложения функции Y(x), 
при правильном решении значения S и Y для заданного аргумента x (для тестовых значений исходных данных) должны 
совпадать в целой части и в первых двух-четырех позициях после десятичной точки. 
Работу программы проверить для a = 0,1; b = 1,0; h = 0,1; значение параметра n выбрать так, 
чтобы |Y(x) – S(x)| < 0.001 (0.0001, 0.00001)
 */

#include "stdio.h"//библиотека для работы функций ввода-вывода
#include <math.h>//библиотека для работы математических функций

using namespace std;

int main() {
	float x, a, b, h, y, s = 0.;
	int k, n, factorial = 1;
	//ввод пределов a, b, шага h и степени n
	printf("a = ");
	scanf_s("%f", &a);
	printf("b = ");
	scanf_s("%f", &b);
	printf("h = ");
	scanf_s("%f", &h);
	printf("n = ");
	scanf_s("%d", &n);
	printf("x\tY(x)\t\tS(x)\t\t|Y(x) - S(x)|\n");//верх таблицы
	for (x = a; x < b+h; x += h) {//перебор х в промежутке от а до б с шагом h
		y = sinh(x);//нахождение у для соответствующего икса
		for (k = 0; k <= n; k++) {//расчет k-ого члена суммы s(x)
			for (int i = 1; i <= 2 * k + 1; i++) {//расчёт факториала знаменателя
				factorial *= i;
			}
			s += powf(x, 2 * k + 1) / factorial;//расчет k-ого члена суммы s(x)
			factorial = 1;//конец суммирования, возвращаем факториал к 1
		}
		printf("%.1f\t%f\t%f\t%f\n", x, y, s, fabs(y - s));//вывод строки таблицы 
		s = 0;//обнуление суммы
	}
	return 0;
}
/*Ответ: при  n=2 |Y(x) - S(x)|<0.001
	            n=3 |Y(x) - S(x)|<0.0001
	            n=4 |Y(x) - S(x)|<0.00001
  */
