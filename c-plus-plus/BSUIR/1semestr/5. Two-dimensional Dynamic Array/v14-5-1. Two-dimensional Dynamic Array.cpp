/*
  Написать программу по обработке двухмерного динамического массива. 
  Размеры массива n, m и значения его элементов вводятся с клавиатуры. 
  Найти номер первого из столбцов, не содержащих ни одного отрицательного элемента.
  */

#include "stdio.h"
using namespace std;
int main() {
	int** num; //объявление двухмерного массива
	int N, M, t = 0, k = 0;//t - счетчик элементов в столбце, больших нуля
	//ввод размеров массива с клавиатуры
	printf("Enter the size of the matrix\n");
	printf("N = ");//количество строк
	scanf_s("%d", &N);
	printf("M = ");//количество столбцов
	scanf_s("%d", &M);
	num = new int* [N];//захват памяти под массив указателей
	for (int n = 0; n < N; n++) {
		num[n] = new int[M];//захват памяти под массивы элементов
	}
	//ввод элементов массива с клавиатуры
	printf("\nEnter elements\n");
	for (int n = 0; n < N; n++) {
		for (int m = 0; m < M; m++) {
			printf("[%d%][%d%]: ", n + 1, m + 1);
			scanf_s("%d", &num[n][m]);//ввод элемента, стоящего в n-ой строке и m-ом столбце
		}
		printf("\n");
	}
	//вывод полученной матрицы на экран
	printf("Matrix:\n");
	for (int n = 0; n < N; n++) {
		for (int m = 0; m < M; m++) {
			printf("%d% \t", num[n][m]);
		}
		printf("\n");
	}
	for (int m = 0; m < M; m++) {//перебор по столбцам
		for (int n = 0; n < N; n++) {//перебор по строкам
			if (num[n][m] >= 0) t++;//если элемент больше 0, тогда увеличиваем счетчик элементов в столбце, больших, чем 0
		}
		if (t == N) {//если количество элементов в столбце, больших чем 0, равно количеству элементов в столбце (т.е. количеству строк)
			printf("the number of first row without zero numbers is %d", m + 1);//вывод номера этого столбца
			k = 1;//говорит о том, что нашли столбец без отрицательных элементов
			break;//так как нужен первый столбец, то не нужно перебирать оставшиеся столбцы, поэтому выходим из цикла
		}
		t = 0;//обнуляем счетчик элементов и переходим к следующему столбцу
	}
	if (k == 0) {//т.е. не нашли столбец без отрицательных элементов
		printf("there is no rows without zero numbers\n ");//вывод соответствующего сообщения
	}
	delete[]num;//освобождение памяти
	return 0;
}
