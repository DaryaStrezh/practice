/*Вычислить значение y в зависимости от выбранной функции (x): 2x, x2, х/3, 
аргумент которой x определяется в зависимости от переменной z. 
Обязательно выводить сообщения, показывающие, при каком условии и с какой функцией производились вычисления у. 
При вводе данных использовать проверку на ввод нечисловых данных. 
Организовать проверку исключительных ситуаций: деление на нуль, вычисление корня из отрицательного числа, 
выход значений аргументов используемых функций за допустимые пределы.*/
 
#include "stdio.h"//библиотека для работы функций ввода-вывода
#include <math.h>//библиотека для работы математических функций
using namespace std;
int main() {
	float a, b, z, x, fi, y;//объявление вещественных переменных 
	int f;//флаг для работы цикла
	//ввод a,b,z и проверка их на тип
	printf("a: ");//ввод значения а
	do {//цикл будет повторяться до тех пор, пока пользователь не введет числовое значение
		f = 0;//приравниваем флаг 0. если введенное с клавиатуры значение является числом, тогда t=0, if не выполняется и выходим из while
		if (!(scanf_s("%f", &a))) {//ввод пользователем значения с клавиатуры и проверка на соответсвие типа
			//заходим в if, когда введенное значение не является числом
			printf("Error. \n");
			f = 1;//пока пользователь не введет значение типа float, флаг будет равняться 1
			scanf_s("%*c");//вызов функции scanf с пустым форматом %*c, чтобы пропустить все символы в буфере и очистить его
			printf("a: ");//повторный запрос ввода
		}
	} while (f == 1);
	printf("b: ");//ввод значения b
	do {
		f = 0;
		if (!(scanf_s("%f", &b))) {
			printf("Error. \n");
			f = 1;
			scanf_s("%*c");
			printf("b: ");
		}
	} while (f == 1);
	printf("z: ");//ввод значения z
	do {
		f = 0;
		if (!(scanf_s("%f", &z))) {
			printf("Error. Try again! \n");
			f = 1;
			scanf_s("%*c");
			printf("z: ");
		}
	} while (f == 1);
	//определение зависимости x от z
	if (z > 0) {
		x = sqrtf(z);
		printf("z > 0: x = z^(1/2).\n");//вывод в консоль полученной зависимости х от z
	}
	else if (z <= 0) {
		x = 3 * z + 1;
		printf("z <= 0: x = 3z + 1.\n");//вывод в консоль полученной зависимости х от z
	}
	//выбор зависимости функции fi от х
	printf("Choice fi = \n1. 2x\n2. x^2\n3. x/3\n");//вывод возможных вариантов
	int answ;
	scanf_s("%d", &answ);//считывание ответа
	//анализ ответа 
	switch (answ) {//переменная answ оценивается 1 раз и сравнивается с предложенными вариантами 
	case 1://выполняется, когда введенный ответ = 1
		fi = 2 * x;//задаем зависимость фи(х)
		printf("fi = 2x\n");//вывод на экран выбранной зависимости
		break;//выход из switch
	case 2://введенный ответ = 2
		fi = powf(x, 2);
		printf("fi = x^2\n");
		break;
	case 3://введенный ответ = 3
		fi = x / 3.;
		printf("fi = x/3\n");
		break;
	default://если совпадений нет, т.е. пользователь ввел не предложенный вариант, тогда выходим и сообщаем об ошибке
		printf("Error.\n");
		break;
	}
	if (answ == 1 || answ == 2 || answ == 3) {//когда ответ равен 1 ИЛИ 2 ИЛИ 3, можно найти значение функции y
		y = b * cos(a * fi) + sin(x / 5.) + a * exp(x);
		printf("y = %f", y);//вывод овтета
	}
	else printf("Impossible to find y");//если не нашли значение у, тогда сообщаем об этом
	return 0;
} 
